Compiled from "JTable.java"
public class javax.swing.JTable extends javax.swing.JComponent implements javax.swing.event.TableModelListener,javax.swing.Scrollable,javax.swing.event.TableColumnModelListener,javax.swing.event.ListSelectionListener,javax.swing.event.CellEditorListener,javax.accessibility.Accessible,javax.swing.event.RowSorterListener {
  public static final int AUTO_RESIZE_OFF;
  public static final int AUTO_RESIZE_NEXT_COLUMN;
  public static final int AUTO_RESIZE_SUBSEQUENT_COLUMNS;
  public static final int AUTO_RESIZE_LAST_COLUMN;
  public static final int AUTO_RESIZE_ALL_COLUMNS;
  protected javax.swing.table.TableModel dataModel;
  protected javax.swing.table.TableColumnModel columnModel;
  protected javax.swing.ListSelectionModel selectionModel;
  protected javax.swing.table.JTableHeader tableHeader;
  protected int rowHeight;
  protected int rowMargin;
  protected java.awt.Color gridColor;
  protected boolean showHorizontalLines;
  protected boolean showVerticalLines;
  protected int autoResizeMode;
  protected boolean autoCreateColumnsFromModel;
  protected java.awt.Dimension preferredViewportSize;
  protected boolean rowSelectionAllowed;
  protected boolean cellSelectionEnabled;
  protected transient java.awt.Component editorComp;
  protected transient javax.swing.table.TableCellEditor cellEditor;
  protected transient int editingColumn;
  protected transient int editingRow;
  protected transient java.util.Hashtable<java.lang.Object, java.lang.Object> defaultRenderersByColumnClass;
  protected transient java.util.Hashtable<java.lang.Object, java.lang.Object> defaultEditorsByColumnClass;
  protected java.awt.Color selectionForeground;
  protected java.awt.Color selectionBackground;
  static final boolean $assertionsDisabled;
  public javax.swing.JTable();
  public javax.swing.JTable(javax.swing.table.TableModel);
  public javax.swing.JTable(javax.swing.table.TableModel, javax.swing.table.TableColumnModel);
  public javax.swing.JTable(javax.swing.table.TableModel, javax.swing.table.TableColumnModel, javax.swing.ListSelectionModel);
  public javax.swing.JTable(int, int);
  public javax.swing.JTable(java.util.Vector<? extends java.util.Vector>, java.util.Vector<?>);
  public javax.swing.JTable(java.lang.Object[][], java.lang.Object[]);
  public void addNotify();
  protected void configureEnclosingScrollPane();
  public void removeNotify();
  protected void unconfigureEnclosingScrollPane();
  void setUIProperty(java.lang.String, java.lang.Object);
  public static javax.swing.JScrollPane createScrollPaneForTable(javax.swing.JTable);
  public void setTableHeader(javax.swing.table.JTableHeader);
  public javax.swing.table.JTableHeader getTableHeader();
  public void setRowHeight(int);
  public int getRowHeight();
  public void setRowHeight(int, int);
  public int getRowHeight(int);
  public void setRowMargin(int);
  public int getRowMargin();
  public void setIntercellSpacing(java.awt.Dimension);
  public java.awt.Dimension getIntercellSpacing();
  public void setGridColor(java.awt.Color);
  public java.awt.Color getGridColor();
  public void setShowGrid(boolean);
  public void setShowHorizontalLines(boolean);
  public void setShowVerticalLines(boolean);
  public boolean getShowHorizontalLines();
  public boolean getShowVerticalLines();
  public void setAutoResizeMode(int);
  public int getAutoResizeMode();
  public void setAutoCreateColumnsFromModel(boolean);
  public boolean getAutoCreateColumnsFromModel();
  public void createDefaultColumnsFromModel();
  public void setDefaultRenderer(java.lang.Class<?>, javax.swing.table.TableCellRenderer);
  public javax.swing.table.TableCellRenderer getDefaultRenderer(java.lang.Class<?>);
  public void setDefaultEditor(java.lang.Class<?>, javax.swing.table.TableCellEditor);
  public javax.swing.table.TableCellEditor getDefaultEditor(java.lang.Class<?>);
  public void setDragEnabled(boolean);
  public boolean getDragEnabled();
  public final void setDropMode(javax.swing.DropMode);
  public final javax.swing.DropMode getDropMode();
  javax.swing.JTable$DropLocation dropLocationForPoint(java.awt.Point);
  java.lang.Object setDropLocation(javax.swing.TransferHandler$DropLocation, java.lang.Object, boolean);
  public final javax.swing.JTable$DropLocation getDropLocation();
  public void setAutoCreateRowSorter(boolean);
  public boolean getAutoCreateRowSorter();
  public void setUpdateSelectionOnSort(boolean);
  public boolean getUpdateSelectionOnSort();
  public void setRowSorter(javax.swing.RowSorter<? extends javax.swing.table.TableModel>);
  public javax.swing.RowSorter<? extends javax.swing.table.TableModel> getRowSorter();
  public void setSelectionMode(int);
  public void setRowSelectionAllowed(boolean);
  public boolean getRowSelectionAllowed();
  public void setColumnSelectionAllowed(boolean);
  public boolean getColumnSelectionAllowed();
  public void setCellSelectionEnabled(boolean);
  public boolean getCellSelectionEnabled();
  public void selectAll();
  public void clearSelection();
  public void setRowSelectionInterval(int, int);
  public void setColumnSelectionInterval(int, int);
  public void addRowSelectionInterval(int, int);
  public void addColumnSelectionInterval(int, int);
  public void removeRowSelectionInterval(int, int);
  public void removeColumnSelectionInterval(int, int);
  public int getSelectedRow();
  public int getSelectedColumn();
  public int[] getSelectedRows();
  public int[] getSelectedColumns();
  public int getSelectedRowCount();
  public int getSelectedColumnCount();
  public boolean isRowSelected(int);
  public boolean isColumnSelected(int);
  public boolean isCellSelected(int, int);
  public void changeSelection(int, int, boolean, boolean);
  public java.awt.Color getSelectionForeground();
  public void setSelectionForeground(java.awt.Color);
  public java.awt.Color getSelectionBackground();
  public void setSelectionBackground(java.awt.Color);
  public javax.swing.table.TableColumn getColumn(java.lang.Object);
  public int convertColumnIndexToModel(int);
  public int convertColumnIndexToView(int);
  public int convertRowIndexToView(int);
  public int convertRowIndexToModel(int);
  public int getRowCount();
  public int getColumnCount();
  public java.lang.String getColumnName(int);
  public java.lang.Class<?> getColumnClass(int);
  public java.lang.Object getValueAt(int, int);
  public void setValueAt(java.lang.Object, int, int);
  public boolean isCellEditable(int, int);
  public void addColumn(javax.swing.table.TableColumn);
  public void removeColumn(javax.swing.table.TableColumn);
  public void moveColumn(int, int);
  public int columnAtPoint(java.awt.Point);
  public int rowAtPoint(java.awt.Point);
  public java.awt.Rectangle getCellRect(int, int, boolean);
  public void doLayout();
  public void sizeColumnsToFit(boolean);
  public void sizeColumnsToFit(int);
  public java.lang.String getToolTipText(java.awt.event.MouseEvent);
  public void setSurrendersFocusOnKeystroke(boolean);
  public boolean getSurrendersFocusOnKeystroke();
  public boolean editCellAt(int, int);
  public boolean editCellAt(int, int, java.util.EventObject);
  public boolean isEditing();
  public java.awt.Component getEditorComponent();
  public int getEditingColumn();
  public int getEditingRow();
  public javax.swing.plaf.TableUI getUI();
  public void setUI(javax.swing.plaf.TableUI);
  public void updateUI();
  public java.lang.String getUIClassID();
  public void setModel(javax.swing.table.TableModel);
  public javax.swing.table.TableModel getModel();
  public void setColumnModel(javax.swing.table.TableColumnModel);
  public javax.swing.table.TableColumnModel getColumnModel();
  public void setSelectionModel(javax.swing.ListSelectionModel);
  public javax.swing.ListSelectionModel getSelectionModel();
  public void sorterChanged(javax.swing.event.RowSorterEvent);
  public void tableChanged(javax.swing.event.TableModelEvent);
  public void columnAdded(javax.swing.event.TableColumnModelEvent);
  public void columnRemoved(javax.swing.event.TableColumnModelEvent);
  public void columnMoved(javax.swing.event.TableColumnModelEvent);
  public void columnMarginChanged(javax.swing.event.ChangeEvent);
  public void columnSelectionChanged(javax.swing.event.ListSelectionEvent);
  public void valueChanged(javax.swing.event.ListSelectionEvent);
  public void editingStopped(javax.swing.event.ChangeEvent);
  public void editingCanceled(javax.swing.event.ChangeEvent);
  public void setPreferredScrollableViewportSize(java.awt.Dimension);
  public java.awt.Dimension getPreferredScrollableViewportSize();
  public int getScrollableUnitIncrement(java.awt.Rectangle, int, int);
  public int getScrollableBlockIncrement(java.awt.Rectangle, int, int);
  public boolean getScrollableTracksViewportWidth();
  public boolean getScrollableTracksViewportHeight();
  public void setFillsViewportHeight(boolean);
  public boolean getFillsViewportHeight();
  protected boolean processKeyBinding(javax.swing.KeyStroke, java.awt.event.KeyEvent, int, boolean);
  protected void createDefaultRenderers();
  protected void createDefaultEditors();
  protected void initializeLocalVars();
  protected javax.swing.table.TableModel createDefaultDataModel();
  protected javax.swing.table.TableColumnModel createDefaultColumnModel();
  protected javax.swing.ListSelectionModel createDefaultSelectionModel();
  protected javax.swing.table.JTableHeader createDefaultTableHeader();
  protected void resizeAndRepaint();
  public javax.swing.table.TableCellEditor getCellEditor();
  public void setCellEditor(javax.swing.table.TableCellEditor);
  public void setEditingColumn(int);
  public void setEditingRow(int);
  public javax.swing.table.TableCellRenderer getCellRenderer(int, int);
  public java.awt.Component prepareRenderer(javax.swing.table.TableCellRenderer, int, int);
  public javax.swing.table.TableCellEditor getCellEditor(int, int);
  public java.awt.Component prepareEditor(javax.swing.table.TableCellEditor, int, int);
  public void removeEditor();
  void compWriteObjectNotify();
  protected java.lang.String paramString();
  public boolean print() throws java.awt.print.PrinterException;
  public boolean print(javax.swing.JTable$PrintMode) throws java.awt.print.PrinterException;
  public boolean print(javax.swing.JTable$PrintMode, java.text.MessageFormat, java.text.MessageFormat) throws java.awt.print.PrinterException;
  public boolean print(javax.swing.JTable$PrintMode, java.text.MessageFormat, java.text.MessageFormat, boolean, javax.print.attribute.PrintRequestAttributeSet, boolean) throws java.awt.print.PrinterException, java.awt.HeadlessException;
  public boolean print(javax.swing.JTable$PrintMode, java.text.MessageFormat, java.text.MessageFormat, boolean, javax.print.attribute.PrintRequestAttributeSet, boolean, javax.print.PrintService) throws java.awt.print.PrinterException, java.awt.HeadlessException;
  public java.awt.print.Printable getPrintable(javax.swing.JTable$PrintMode, java.text.MessageFormat, java.text.MessageFormat);
  public javax.accessibility.AccessibleContext getAccessibleContext();
  javax.swing.TransferHandler$DropLocation dropLocationForPoint(java.awt.Point);
  public javax.swing.plaf.ComponentUI getUI();
  static {};
}
